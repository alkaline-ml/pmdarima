jobs:
- job: Windows

  pool:
    vmImage: 'windows-latest'

  strategy:
    maxParallel: 6
    matrix:
      Python35-x86:
        python.version: '3.5'
        architecture: 'x86'

      Python35-x64:
        python.version: '3.5'
        architecture: 'x64'

      Python36-x86:
        python.version: '3.6'
        architecture: 'x86'

      Python36-x64:
        python.version: '3.6'
        architecture: 'x64'

      Python37-x86:
        python.version: '3.7'
        architecture: 'x86'

      Python37-x64:
        python.version: '3.7'
        architecture: 'x64'

  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(python.version)'
      architecture: '$(architecture)'
    displayName: 'Setting Python version and system architecture'

  - template: pypi_build_and_deploy.yml

  - powershell: Write-Host "##vso[task.prependpath]$env:CONDA\Scripts"
    condition: succeeded()  # Conda build cannot happen if whl did not get built
    displayName: 'Add conda to PATH'

  - script: call activate
    displayName: 'Conda fix for Windows'

  - template: conda_build_and_deploy.yml

- job: macOS

  pool:
    vmImage: 'macOS-latest'

  # Only need to set this for macOS
  variables:
    PMD_MPL_BACKEND: TkAgg

  strategy:
    maxParallel: 3
    matrix:
      Python35:
        python.version: '3.5'

      Python36:
        python.version: '3.6'

      Python37:
        python.version: '3.7'

  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(python.version)'
    displayName: 'Setting Python version'

  - template: pypi_build_and_deploy.yml
  - bash: |
      echo "##vso[task.prependpath]$CONDA/bin"
      sudo chown -R $USER $CONDA
    condition: succeeded()  # Conda build cannot happen if whl did not get built
    displayName: 'Add conda to PATH'

  - template: conda_build_and_deploy.yml

