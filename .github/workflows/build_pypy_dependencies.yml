name: Build PyPy Dependencies

on:
  push:
    paths:
    - 'requirements.txt'
    - '.github/workflows/build_pypy_dependencies.yml'

jobs:
  build:
    name: Build PyPy Dependencies
    runs-on: ubuntu-latest
    container: pypy:3.6-7.1.1
    steps:
      - name: Checkout code
        uses: actions/checkout@master

      - name: Fixing Python Version
        run: ln -sf `which pypy3` /usr/bin/python

      - name: Installing build requirements
        run: |
          apt-get -yq update && apt-get -yq install \
            libatlas-dev \
            libatlas-base-dev \
            liblapack-dev \
            gfortran
          python -m pip install --upgrade pip
          # This seems silly, but we have to install these to build the wheels we want below
          python -m pip install "$(cat requirements.txt | grep Cython)"
          python -m pip install "$(cat requirements.txt | grep numpy)"
          python -m pip install "$(cat requirements.txt | grep scipy)"
          python -m pip install "$(cat requirements.txt | grep scikit-learn)"
          python -m pip install "$(cat requirements.txt | grep pandas)"
          python -m pip install "$(cat requirements.txt | grep statsmodels)"
          python -m pip install matplotlib
          python -m pip install pytest pytest-mpl pytest-benchmark
          python -m pip install twine

      - name: Building wheels
        run: |
          python -m pip wheel --wheel-dir ${GITHUB_WORKSPACE}/packages "$(cat requirements.txt | grep Cython)"
          python -m pip wheel --wheel-dir ${GITHUB_WORKSPACE}/packages "$(cat requirements.txt | grep numpy)"
          python -m pip wheel --wheel-dir ${GITHUB_WORKSPACE}/packages "$(cat requirements.txt | grep scipy)"
          python -m pip wheel --wheel-dir ${GITHUB_WORKSPACE}/packages "$(cat requirements.txt | grep scikit-learn)"
          python -m pip wheel --wheel-dir ${GITHUB_WORKSPACE}/packages "$(cat requirements.txt | grep pandas)"
          python -m pip wheel --wheel-dir ${GITHUB_WORKSPACE}/packages "$(cat requirements.txt | grep statsmodels)"
          python -m pip wheel --wheel-dir ${GITHUB_WORKSPACE}/packages matplotlib
          python -m pip wheel --wheel-dir ${GITHUB_WORKSPACE}/packages pytest pytest-mpl pytest-benchmark

      - name: Upload to Gemfury
        run: twine upload --repository-url https://push.fury.io/alkaline-ml -p "" --skip-existing packages/*
        env:
          TWINE_USERNAME: ${{ secrets.GEMFURY_TOKEN }}
