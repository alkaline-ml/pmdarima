name: Build PyPy Dependencies

on:
  push:
    paths:
    - 'requirements.txt'
    - '.github/workflows/build_pypy_dependencies.yml'
    - 'setup.py'

jobs:
  build:
    name: Build PyPy Dependencies
    runs-on: ubuntu-latest
    container: pypy:3.6-7.1.1
    steps:
      - name: Checkout code
        uses: actions/checkout@master

      - name: Fixing Python Version
        run: ln -sf `which pypy3` /usr/bin/python

      # We have to install everything before using `pip wheel`,
      # or some of the wheels will fail to build (lacking their dependencies).
      #
      # We have to install them one-by-one because pip collects everything, THEN installs.
      # Doing this means it may try to install things in the wrong order and fail
      - name: Installing build requirements
        run: |
          apt-get -yq update && apt-get -yq install \
            libatlas-dev \
            libatlas-base-dev \
            liblapack-dev \
            gfortran \
            ruby-full
          gem install gemfury
          python -m pip install --upgrade pip
          python -m pip install "$(cat requirements.txt | grep Cython)"
          python -m pip install "$(cat requirements.txt | grep numpy)"
          # Have to force <1.4.0 (see https://github.com/scipy/scipy/releases/tag/v1.4.0)
          python -m pip install "$(cat requirements.txt | grep scipy),<1.4.0"
          python -m pip install "$(cat requirements.txt | grep scikit-learn)"
          python -m pip install "$(cat requirements.txt | grep pandas)"
          python -m pip install "$(cat requirements.txt | grep statsmodels)"
          python -m pip install matplotlib
          python -m pip install pytest pytest-mpl pytest-benchmark
        shell: bash

      - name: Building wheel files
        run: |
          python -m pip wheel --wheel-dir ${GITHUB_WORKSPACE}/packages --no-deps "$(cat requirements.txt | grep Cython)"
          python -m pip wheel --wheel-dir ${GITHUB_WORKSPACE}/packages --no-deps "$(cat requirements.txt | grep numpy)"
          # Have to force <1.4.0 (see https://github.com/scipy/scipy/releases/tag/v1.4.0)
          python -m pip wheel --wheel-dir ${GITHUB_WORKSPACE}/packages --no-deps "$(cat requirements.txt | grep scipy),<1.4.0"
          python -m pip wheel --wheel-dir ${GITHUB_WORKSPACE}/packages --no-deps "$(cat requirements.txt | grep scikit-learn)"
          python -m pip wheel --wheel-dir ${GITHUB_WORKSPACE}/packages --no-deps "$(cat requirements.txt | grep pandas)"
          python -m pip wheel --wheel-dir ${GITHUB_WORKSPACE}/packages --no-deps "$(cat requirements.txt | grep statsmodels)"
          python -m pip wheel --wheel-dir ${GITHUB_WORKSPACE}/packages --no-deps matplotlib pytest pytest-mpl pytest-benchmark

      - name: Uploading to Gemfury
        run: |
          shopt -s nullglob
          wheels=(packages/*)
          for wheel in "${wheels[@]}"
          do
            fury push --public --as=alkaline-ml --api-token=${{ secrets.GEMFURY_TOKEN }} $wheel || echo "Version already exists"
          done
        shell: bash
