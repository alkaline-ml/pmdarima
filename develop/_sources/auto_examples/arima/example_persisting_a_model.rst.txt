

.. _sphx_glr_auto_examples_arima_example_persisting_a_model.py:


=========================
Persisting an ARIMA model
=========================


This example demonstrates how we can persist an ARIMA model to disk after
fitting it. It can then be loaded back up and used to generate forecasts.

.. raw:: html

   <br/>





.. rst-class:: sphx-glr-script-out

 Out::

    Predictions: array([21966.69715246, 25983.70920499, 30225.30978813, 35417.12496193,
           13011.36187904, 19639.41027751, 21506.5817612 , 23674.33998338,
           21685.76394161, 23669.77819054, 26955.35255987, 22755.25061552,
           19808.16131653, 23578.78184917, 27845.86719676, 32923.89426449,
           10475.68777743, 17024.74533454, 18831.64797205, 20929.54671378,
           18876.02414367, 20792.57512786, 24011.97546995, 19745.03906632,
           16731.45362468, 20435.4047067 , 24635.90938337, 29647.3103014 ,
            7132.50096185, 13614.94373211, 15355.23769634, 17386.52463301,
           15266.39186215, 17116.33182376, 20269.12156426, 15935.57434338,
           12855.37819496, 16492.71851361, 20626.61245591, 25571.40262471,
            2989.98254355,  9405.81456829, 11079.497789  , 13044.17398113,
           10857.43046625, 12640.75968356, 15726.93867992, 11326.78071482,
            8179.97382221, 11750.70339666, 15817.98659477])




|


.. code-block:: python

    print(__doc__)

    # Author: Taylor Smith <taylor.smith@alkaline-ml.com>

    import pmdarima as pm
    from pmdarima import model_selection
    import joblib  # for persistence
    import os

    # #############################################################################
    # Load the data and split it into separate pieces
    y = pm.datasets.load_wineind()
    train, test = model_selection.train_test_split(y, train_size=125)

    # Fit an ARIMA
    arima = pm.ARIMA(order=(1, 1, 2), seasonal_order=(0, 1, 1, 12))
    arima.fit(y)

    # #############################################################################
    # Persist a model and create predictions after re-loading it
    pickle_tgt = "arima.pkl"
    try:
        # Pickle it
        joblib.dump(arima, pickle_tgt, compress=3)

        # Load the model up, create predictions
        arima_loaded = joblib.load(pickle_tgt)
        preds = arima_loaded.predict(n_periods=test.shape[0])
        print("Predictions: %r" % preds)

    finally:
        # Remove the pickle file at the end of this example
        try:
            os.unlink(pickle_tgt)
        except OSError:
            pass

**Total running time of the script:** ( 0 minutes  3.292 seconds)



.. only :: html

 .. container:: sphx-glr-footer


  .. container:: sphx-glr-download

     :download:`Download Python source code: example_persisting_a_model.py <example_persisting_a_model.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: example_persisting_a_model.ipynb <example_persisting_a_model.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.readthedocs.io>`_
